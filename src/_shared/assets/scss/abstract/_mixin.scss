@mixin anim($duration: $anim-time) {
	transition: $duration ease-in-out;

	&::before,
	&::after {
		transition: $duration ease-in-out;
	}
}

@mixin animAll($duration: $anim-time) {
	@include anim($duration);

	& * {
		@include anim($duration);
	}
}

@mixin without-animation() {
	@media (prefers-reduced-motion: reduce) {
		@content;
	}
}

///width: #{$smScreenWidth}
@mixin laptop {
	@media (max-width: $laptop-width) {
		@content;
	}
}

///width: #{$smScreenWidth}
@mixin smallScreen {
	@media (max-width: $screen-sm-width), (max-height: $screen-sm-height) {
		@content;
	}
}

///width: #{$smallestScreenWidth}
@mixin smallestScreen {
	@media (max-width: $screen-smallest-width), (max-height: $screen-sm-height) {
		@content;
	}
}

///width: #{$bigMobileWidth}
@mixin bigMobile {
	@media (max-width: $mobile-big-width), (max-height: $mobile-height) {
		@content;
	}
}

/// #{$mobile-width}
@mixin mobile() {
	@media (max-width: $mobile-width), (max-height: $mobile-height) {
		@content;
	}
}

@mixin min-scale-150() {
	@media (-webkit-min-device-pixel-ratio: 1.5) {
		@content;
	}
}

///Font
///Font
///Font

@mixin font40($weight: 700) {
	font-size: 40px;
	line-height: 48px;
	font-weight: $weight;

	@include mobile {
		font-size: 36px;
		line-height: 42px;
	}
}

///30px
@mixin font30($weight: 500) {
	font-size: 30px;
	line-height: 36px;
	font-weight: $weight;
}

///24px
@mixin font24($weight: 500) {
	font-size: 24px;
	line-height: 24px;
	font-weight: $weight;
}

///NAMED fonts
///NAMED fonts
///NAMED fonts

///28px
@mixin fontTitle($weight: 700) {
	font-size: 28px;
	line-height: 40px;
	font-weight: $weight;
}

///20px
@mixin fontMidTitle($weight: 500) {
	font-size: 20px;
	line-height: 24px;
	font-weight: $weight;
}

///18px
@mixin fontBig($weight: 400) {
	font-size: 18px;
	line-height: 24px;
	font-weight: $weight;
}

///16px
@mixin fontMid($weight: 400) {
	font-size: 16px;
	line-height: 20px;
	font-weight: $weight;
}

///14px
@mixin fontSmall($weight: 400) {
	font-size: 14px;
	line-height: 16px;
	font-weight: $weight;
}

///12px
@mixin fontCaption($weight: 400) {
	font-size: 12px;
	line-height: 14px;
	font-weight: $weight;
}

@mixin font($font-size: 16, $line-height: 22, $weight: 400) {
	font-size: $font-size * 1px;
	line-height: $line-height * 1px;
	font-weight: $weight;
}

@mixin tightFont() {
	@content;
	line-height: 1em;
}

@mixin width-from-letter-count($count) {
	min-width: Calc(1em * #{$count} * 0.6);
}


///Helpers
@mixin scrollbarStyle($width: 5px) {
	$scrollBarColor: $color-bg-grey-dark;
	$scrollBarColorLight: $color-bg-grey-lighter;

	scrollbar-color: $scrollBarColor transparent;
	scrollbar-width: thin;

	&::-webkit-scrollbar {
		width: $width;
		height: $width;
	}
	&::-webkit-scrollbar-button {
		height: 0px;
		width: 0px;
		background-color: transparent;
		border-radius: 8px;
		//display: none;
	}
	&::-webkit-scrollbar-track {
		background-color: #999;
	}
	&::-webkit-scrollbar-track-piece {
		background-color: $scrollBarColorLight
	}
	&::-webkit-scrollbar-thumb {
		height: 24px;
		background-color: $scrollBarColor;
		border-radius: 3px;
	}
	&::-webkit-scrollbar-corner {
		width: 8px;
		height: 8px;
		border-radius: 50%;
		background-color: $scrollBarColor;
	}
	&::-webkit-resizer {
		background-color: $scrollBarColor;
	}
}

@mixin setAbs($top: 0, $left: 0, $right: 0, $bottom: 0) {
	top: $top;
	left: $left;
	right: $right;
	bottom: $bottom;
}

@mixin absoluteGrow($pos: absolute, $pad: 0) {
	position: $pos;
	@include setAbs($pad, $pad, $pad, $pad);
}

@mixin fixedHW($height, $width: null) {
	@if ($width == null) {
		$width: $height;
	}
	min-height: $height;
	min-width: $width;
	max-height: $height;
	max-width: $width;
	height: $height;
	width: $width;
}

//#
@mixin iSlideDown($display:block, $time: .8s) {
	display: none;
	max-height: 0;
	max-width: 100%;
	overflow: hidden;
	box-sizing: content-box;

	overflow-y: auto;
	overscroll-behavior: contain;

	&.active {
		display: $display;
		max-height: 100vh;
		animation: slideDown .8s forwards;

		@include scrollbarStyle();
	}

	@keyframes slideDown {
		from {
			max-height: 0;
		}
		to {
			max-height: 100vh;
		}
	}
}

@mixin hasParent($that) {
	@at-root {
		#{$that} {
			@content;
		}

		#{$that} {
			@content;
		}
	}
}

//#
@mixin parentHover($parent) {
	$that: &;
	@at-root {
		#{$parent}:hover {
			#{$that} {
				@content;
			}
		}
	}
}

//#
@mixin parentActive($parent) {
	$this: &;
	@at-root {
		#{$parent}:active,
		#{$parent}.active {
			#{$this} {
				@content;
			}
		}
	}
}

//#
@mixin firstParentActive() {
	$that: &;
	@at-root {
		*:active > #{$that},
		.active > #{$that} {
			@content;
		}
	}
}


@mixin lineClamp($lines: 2) {
	display: -webkit-box;
	-webkit-line-clamp: $lines;
	-webkit-box-orient: vertical;
	overflow: hidden;
}

@mixin add-click-area($val, $position: relative) {
	position: $position;
	&::before {
		content: "";
		position: absolute;
		top: -$val;
		left: -$val;
		right: -$val;
		bottom: -$val;

		min-height: 100%;
		min-width: 100%;
	}
}

// Gallery
// Gallery
// Gallery

/// $product-gallery-margin горизонтальный отступ между карточками: --row-gap перменная
@mixin set-item-count-in-row($count) {
	width: Calc((100% - #{($count - 1)} * #{$product-gallery-margin}) / #{$count});
}

@mixin gallery-row-mode() {
	$this: &;
	@at-root {
		.row-mode #{$this},
		.row-pro-mode #{$this} {
			@content;
		}
	}
}

@mixin gallery-row-pro-mode() {
	$this: &;
	@at-root {
		.row-mode.row-pro-mode #{$this} {
			@content;
		}
	}
}

// ui Mixin
// ui Mixin
// ui Mixin

@mixin ui-checkbox {
	--size: 20px;
	--margin: Calc(var(--size) / 2);

	position: relative;
	display: block;
	@include fixedHW(0px, 0px);
	margin: var(--margin);
	background-color: transparent;
	cursor: pointer;

	@include animAll($anim-small-time);

	&::before,
	&::after {
		content: "";
		transform: translate(-50%, -50%);
		position: absolute;
		top: 50%;
		left: 50%;

		@include fixedHW(Calc(var(--size)), Calc(var(--size)));
		display: flex;

		background-image: none;
	}

	&:before {
		border: 1px solid $color-main;
		background-color: white;
		border-radius: 4px;
	}

	&:after {
		transform: translate(-50%, -50%) scale(0);
		clip-path: polygon(92% 27%, 46% 87%, 16% 68%, 24% 57%, 45% 70%, 80% 21%);
		background-color: white;
		opacity: 0;
	}

	&:checked:before,
	&.checked:before,
	input:checked + &:before {
		background-color: $color-main;
	}

	&:checked:after,
	&.checked:after,
	input:checked + &:after {
		transform: translate(-50%, -50%) scale(0.8);
		opacity: 1;
	}
}

@mixin ui-radio {
	position: relative;
	margin: 0;

	&::before {
		content: "";
		position: absolute;
		top: 50%;
		left: 50%;
		padding: 7px;
		background-color: #fff;
		border-radius: 50%;
		border: 1px solid $color-border-grey;
		transform: translate(-50%, -50%);
	}

	&:checked::after {
		content: "";
		top: 50%;
		left: 50%;
		position: absolute;
		padding: 5px;
		background-color: $color-main;
		border-radius: 50%;
		transform: translate(-50%, -50%);
	}
}

@mixin ui-absolute-counter($top: 2px, $right: 2px) {
	position: absolute;
	top: $top;
	right: $right;

	@extend %ui-counter;
}

@mixin ui-shadow-block($border-radius: 16px) {
	background: white;
	box-shadow: 0 0 2px rgba(20, 20, 20, 0.1), 0 0 8px rgba(20, 20, 20, 0.08);
	border-radius: $border-radius;
}

@mixin ui-shadow-block-dark($border-radius: 16px) {
	background: white;
	box-shadow: 0 0 2px rgba(20, 20, 20, 0.12), 0 0 8px rgba(20, 20, 20, 0.12);
	border-radius: $border-radius;
}

@mixin ui-pseudo-bg() {
	&:before {
		content: '';
		@include absoluteGrow(fixed);
		background-color: rgba(0, 0, 0, 0.1);
		backdrop-filter: blur(24px) opacity(0);

		@include anim();

		z-index: -1;
	}

	&.active:before {
		backdrop-filter: blur(24px) opacity(1);
	}
}

@mixin ui-default-padding() {
	--padding: 16px;
	padding: var(--padding);

	@include bigMobile() {
		--padding: 8px;
	}
}

@mixin ui-inactive() {
	opacity: 0.45;
	filter: grayscale(1);
}

@mixin ui-loader() {
	--loader-radius: 64px;
	--default-transform: translate(-50%, -50%);

	position: relative;

	z-index: 2;

	&.small {
		--loader-radius: 32px;
	}

	&:before,
	&:after {
		content: '';
		position: absolute;
		top: 50%;
		left: 50%;

		width: Var(--loader-radius);
		height: Var(--loader-radius);

		border: 7px solid $color-bg-grey-dark;
		border-radius: 50%;

		opacity: 1;
		transform: Var(--default-transform);
		animation: lds-ripple 1s cubic-bezier(0, 0.2, 0.8, 1) infinite;
		z-index: -1;
	}

	&:after {
		animation-delay: -0.5s;
	}

	@keyframes lds-ripple {
		0% {
			transform: Var(--default-transform) scale(0);
			opacity: 1;
		}
		100% {
			transform: Var(--default-transform) scale(1);
			opacity: 0;
		}
	}

	&.to-up {
		height: 64px;
	}
}

@mixin ui-spinner($is-absolute: false) {
	@if $is-absolute {
		position: absolute;
		top: 50%;
		left: 50%;
	}

	@include fixedHW(1em);

	color: inherit;

	background-color: transparent;
	border-radius: 50%;
	border: 1px solid currentColor;
	border-top-color: transparent;

	@keyframes absolute-spin {
		from {
			transform: translate(-50%, -50%) rotate(0);
		}
		to {
			transform: translate(-50%, -50%) rotate(360deg);
		}
	}

	@keyframes spin {
		from {
			transform: rotate(0);
		}
		to {
			transform: rotate(360deg);
		}
	}

	@if $is-absolute {
		animation-name: absolute-spin;
	}
	@else {
		animation-name: spin;
	}

	animation-duration: $anim-big-time;
	animation-timing-function: ease-in-out;
	animation-iteration-count: infinite;

	z-index: 3;
}


@mixin product-tool-btn() {
	--scale: 0;

	position: relative;
	height: 28px;
	width: 28px;

	background-color: white;
	border-radius: 50%;
	box-shadow: 0 0 4px rgba(20, 20, 20, 0.08), 0 0 8px rgba(20, 20, 20, 0.08);

	@include animAll($anim-small-time);

	cursor: pointer;

	&__ico {
		position: absolute;
		top: 50%;
		left: 50%;

		width: 20px;
		height: 20px;

		object-fit: contain;
		transform: translate(-50%, -50%) scale(Var(--scale));

		color: $color-bg-grey-dark;

		&:hover {
			--scale: 1.1 !important;
			color: $color-main;
		}

		&.active {
			--scale: 1;
			color: $color-main;
		}
	}
}

@mixin slideHeightDown($start-height: 0, $max-height: 100vh, $time: 0.8s) {
	max-height: none;
	@keyframes slideDown {
		from {
			max-height: $start-height;
		}
		to {
			max-height: $max-height;
		}
	}

	animation-name: slideDown;
	animation-duration: $time;
	animation-timing-function: cubic-bezier(0.6, 0.51, 0.19, 0.93);
	animation-fill-mode: none;
}
